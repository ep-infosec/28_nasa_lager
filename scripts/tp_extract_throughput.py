#!/usr/bin/env python
import argparse
import sys


def main():
    parser = argparse.ArgumentParser(description='Lager Tracepoint Throughput Calculator')
    parser.add_argument('file', metavar='FILE', type=str, help='a trace file generated by babeltrace')
    args = parser.parse_args()

    max_bps = 0
    min_bps = sys.float_info.max
    tot_bps = 0
    num_bps = 0

    with open(args.file) as f:
        rows = f.readlines()
        rows = [x.strip() for x in rows]

        for row in rows:
            if 'lager_tp_zmq_msg' in row:
                delta_seconds = float(row[row.find('(') + 2:row.find(')')])
                size_idx = row.find('msg_total_size = ') + 17
                size_bytes = int(row[size_idx:row.find('}', size_idx) - 1])
                bytes_per_second = size_bytes / delta_seconds
                if bytes_per_second < min_bps:
                    min_bps = bytes_per_second
                if bytes_per_second > max_bps:
                    max_bps = bytes_per_second
                num_bps += 1
                tot_bps += bytes_per_second

        tot_bps -= max_bps
        tot_bps -= min_bps
        num_bps -= 2
        avg_bps = tot_bps / num_bps
        print 'max: {0:.2f} bytes/sec\nmin: {1:.2f} bytes/sec\navg: {2:.2f} bytes/sec'.format(max_bps, min_bps, avg_bps)


if __name__ == '__main__':
    main()
